SELECT P.PRODUCT_ID, PRODUCT_NAME, SUM(ORDER_QUANTITY * PRODUCT_PRICE) AS ORDER_AMOUNT
    FROM ORDER_LINES O
         JOIN PRODUCT P
              ON (P.PRODUCT_ID = O.PRODUCT_ID)
    GROUP BY P.PRODUCT_ID, PRODUCT_NAME;

SELECT CUSTOMER_CITY, SUM(ORDER_QUANTITY * PRODUCT_PRICE) AS ORDER_AMOUNT
    FROM ORDER_LINES O JOIN PRODUCT P ON (P.PRODUCT_ID = O.PRODUCT_ID)
        JOIN CUSTOMER C
            ON (C.CUSTOMER_ID = O.CUSTOMER_ID)
    GROUP BY CUSTOMER_CITY;

SELECT STRFTIME('%Y/%m', ORDER_DATE), SUM(ORDER_QUANTITY * PRODUCT_PRICE) AS ORDER_AMOUNT
    FROM ORDER_LINES O
         JOIN PRODUCT P
              ON (P.PRODUCT_ID = O.PRODUCT_ID)
    GROUP BY 1;

DROP VIEW REVENUE_HOME;

CREATE VIEW REVENUE_HOME
AS SELECT PRODUCT_CATEGORY, CUSTOMER_CITY, SUM(ORDER_QUANTITY * PRODUCT_PRICE) AS ORDER_AMOUNT
   FROM ORDER_LINES O
            JOIN PRODUCT P
                 ON P.PRODUCT_ID = O.PRODUCT_ID AND PRODUCT_CATEGORY = 'Home'
            JOIN CUSTOMER C
                 ON C.CUSTOMER_ID = O.CUSTOMER_ID
   GROUP BY PRODUCT_CATEGORY, CUSTOMER_CITY;

SELECT * FROM REVENUE_HOME;

DROP VIEW REVENUE_OUTDOOR;

CREATE VIEW REVENUE_OUTDOOR
AS SELECT PRODUCT_CATEGORY, CUSTOMER_CITY, SUM(ORDER_QUANTITY * PRODUCT_PRICE) AS ORDER_AMOUNT
   FROM ORDER_LINES O
            JOIN PRODUCT P
                 ON P.PRODUCT_ID = O.PRODUCT_ID AND PRODUCT_CATEGORY = 'Outdoor'
            JOIN CUSTOMER C
                 ON C.CUSTOMER_ID = O.CUSTOMER_ID
   GROUP BY PRODUCT_CATEGORY, CUSTOMER_CITY;

SELECT * FROM REVENUE_OUTDOOR;

SELECT O.CUSTOMER_CITY, SUM(O.ORDER_AMOUNT), SUM(H.ORDER_AMOUNT)
    FROM REVENUE_OUTDOOR O
         JOIN REVENUE_HOME H ON H.CUSTOMER_CITY = O.CUSTOMER_CITY
    GROUP BY O.CUSTOMER_CITY;

SELECT CUSTOMER_CITY,
       SUM(CASE WHEN PRODUCT_CATEGORY = 'Outdoor' THEN ORDER_QUANTITY * PRODUCT_PRICE END),
       SUM(CASE WHEN PRODUCT_CATEGORY = 'Home' THEN ORDER_QUANTITY * PRODUCT_PRICE END)
    FROM ORDER_LINES O
        JOIN PRODUCT P
            ON P.PRODUCT_ID = O.PRODUCT_ID
        JOIN CUSTOMER C
            ON C.CUSTOMER_ID = O.CUSTOMER_ID
    ÃŸGROUP BY CUSTOMER_CITY;

DROP VIEW REVENUE_BY_CITY;

CREATE VIEW REVENUE_BY_CITY AS
    SELECT CUSTOMER_CITY, SUM(ORDER_QUANTITY * PRODUCT_PRICE) AS BASE_AMOUNT
        FROM ORDER_LINES O
            JOIN PRODUCT P
                 ON P.PRODUCT_ID = O.PRODUCT_ID
            JOIN CUSTOMER C
                 ON C.CUSTOMER_ID = O.CUSTOMER_ID
        GROUP BY CUSTOMER_CITY;

SELECT * FROM REVENUE_BY_CITY;

DROP VIEW REVENUE_BY_PRODUCT_CATEGORY_AND_CITY;

CREATE VIEW REVENUE_BY_PRODUCT_CATEGORY_AND_CITY AS
    SELECT PRODUCT_CATEGORY, CUSTOMER_CITY, SUM(ORDER_QUANTITY * PRODUCT_PRICE) AS ORDER_AMOUNT
        FROM ORDER_LINES O
            JOIN PRODUCT P
                 ON P.PRODUCT_ID = O.PRODUCT_ID
            JOIN CUSTOMER C
                 ON C.CUSTOMER_ID = O.CUSTOMER_ID
    GROUP BY PRODUCT_CATEGORY, CUSTOMER_CITY;

SELECT * FROM REVENUE_BY_PRODUCT_CATEGORY_AND_CITY;

SELECT RPC.CUSTOMER_CITY, PRODUCT_CATEGORY, SUM(ORDER_AMOUNT), MAX(BASE_AMOUNT), SUM(ORDER_AMOUNT) / MAX(BASE_AMOUNT)
    FROM REVENUE_BY_PRODUCT_CATEGORY_AND_CITY RPC
         JOIN REVENUE_BY_CITY RC
              ON RC.CUSTOMER_CITY = RPC.CUSTOMER_CITY
    GROUP BY RPC.CUSTOMER_CITY, PRODUCT_CATEGORY;

SELECT DISTINCT CUSTOMER_CITY, PRODUCT_CATEGORY,
        SUM(ORDER_QUANTITY * PRODUCT_PRICE) over (PARTITION BY PRODUCT_CATEGORY, CUSTOMER_CITY) AS ORDER_AMOUNT,
        SUM(ORDER_QUANTITY * PRODUCT_PRICE) over (PARTITION BY CUSTOMER_CITY) AS CITY_ORDER_AMOUNT
    FROM ORDER_LINES O
         JOIN PRODUCT P
              ON P.PRODUCT_ID = O.PRODUCT_ID
         JOIN CUSTOMER C
              ON C.CUSTOMER_ID = O.CUSTOMER_ID
    ORDER BY 1,2;